#!/usr/bin/env python3
# SPDX-FileCopyrightText: Christian Ams√ºss and the aiocoap contributors
#
# SPDX-License-Identifier: MIT

"""A demo that opens a Kivy window and exposes it as a text display via CoAP

This can fundamentally also be run on Android by using the `Kivy launcher`_,
packing all the dependencies (aiocoap, cbor2, widgets_common) into a new
application's directory, placing this as main.py and adding a suitable
android.txt file. (Tested only with CoAP-over-TCP so far).

.. _`Kivy launcher`: https://github.com/kivy/kivy-launcher
"""

import asyncio

from aiocoap import Context, Message, CHANGED
from aiocoap.resource import Site, Resource, ObservableResource, WKCResource

from kivy.app import App
from kivy.lang.builder import Builder

from widgets_common.kivy_resource import *

kv = '''
BoxLayout:
    orientation: 'vertical'
    Button:
        id: btn
        text: 'Use CoAP discovery to write here or receive notifications \
of clicks.'
        background_normal: ''
        color: (0, 0, 0, 1)
'''

class CoAPDisplay(App):
    def build(self):
        return Builder.load_string(kv)

    async def main(self):
        site = Site()
        site.add_resource(['text'], Text(self.root.ids.btn))
        site.add_resource(['pressed'], PressState(self.root.ids.btn))
        site.add_resource(['.well-known', 'core'],
                WKCResource(site.get_resources_as_linkheader))

        self.context = await Context.create_server_context(site)

    def on_start(self):
        asyncio.get_event_loop().create_task(self.main())

if __name__ == '__main__':
    asyncio.run(CoAPDisplay().async_run())
